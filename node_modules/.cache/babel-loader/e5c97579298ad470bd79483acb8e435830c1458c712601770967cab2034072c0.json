{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\vs\\\\twitter\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Homepage from './components/Homepage/Homepage';\nimport Authentication from './components/Authentication/Authentication';\nimport Navigation from './components/Navigation/Navigation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { store } from './Store/store';\nimport { useEffect } from 'react';\nimport { getUserProfile } from './Store/Auth/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const jwt = localStorage.getItem(\"jwt\");\n  const {\n    auth\n  } = useSelector(store => store);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // 2nd last 32.48\n    if (jwt && !auth.user && !auth.loading) {\n      dispatch(getUserProfile(jwt)).catch(() => {\n        // Redirect to login if the token is invalid or expired\n        localStorage.removeItem(\"jwt\");\n        navigate(\"/login\");\n      });\n    }\n  }, [auth.user, jwt, auth.loading, dispatch, navigate]);\n  useEffect(() => {\n    if (auth.user && !auth.loading) {\n      navigate(\"/\"); // Navigate to homepage when user data is available\n    }\n  }, [auth.user, navigate, auth.loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: auth.user ? /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 46\n        }, this) : /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jv4jidyaf3sGybXu7XA5OgIf+6E=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","useNavigate","Homepage","Authentication","Navigation","useDispatch","useSelector","store","useEffect","getUserProfile","jsxDEV","_jsxDEV","App","_s","jwt","localStorage","getItem","auth","dispatch","navigate","user","loading","catch","removeItem","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/vs/twitter/src/App.js"],"sourcesContent":["import './App.css';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Homepage from './components/Homepage/Homepage';\nimport Authentication from './components/Authentication/Authentication';\nimport Navigation from './components/Navigation/Navigation';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { store } from './Store/store';\nimport { useEffect } from 'react';\nimport { getUserProfile } from './Store/Auth/Action';\n\nfunction App() {\n  const jwt = localStorage.getItem(\"jwt\")\n  const { auth } = useSelector(store => store)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n \n  useEffect(() => {// 2nd last 32.48\n    if (jwt && !auth.user && !auth.loading) {\n      dispatch(getUserProfile(jwt)).catch(() => {\n        // Redirect to login if the token is invalid or expired\n        localStorage.removeItem(\"jwt\");\n        navigate(\"/login\");\n      });\n    }\n  }, [auth.user, jwt, auth.loading, dispatch, navigate]);\n\n  useEffect(() => {\n    if (auth.user && !auth.loading) {\n      navigate(\"/\"); // Navigate to homepage when user data is available\n    }\n  }, [auth.user, navigate, auth.loading]);\n \n  return (\n    <div className=\"\">\n      <Routes>\n        <Route path=\"/\" element={auth.user ? <Homepage /> : <Authentication />}>\n        </Route>\n      </Routes>\n    </div >\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,cAAc,MAAM,4CAA4C;AACvE,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,eAAe;AACrC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;EACvC,MAAM;IAAEC;EAAK,CAAC,GAAGX,WAAW,CAACC,KAAK,IAAIA,KAAK,CAAC;EAC5C,MAAMW,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9BO,SAAS,CAAC,MAAM;IAAC;IACf,IAAIM,GAAG,IAAI,CAACG,IAAI,CAACG,IAAI,IAAI,CAACH,IAAI,CAACI,OAAO,EAAE;MACtCH,QAAQ,CAACT,cAAc,CAACK,GAAG,CAAC,CAAC,CAACQ,KAAK,CAAC,MAAM;QACxC;QACAP,YAAY,CAACQ,UAAU,CAAC,KAAK,CAAC;QAC9BJ,QAAQ,CAAC,QAAQ,CAAC;MACpB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACF,IAAI,CAACG,IAAI,EAAEN,GAAG,EAAEG,IAAI,CAACI,OAAO,EAAEH,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAEtDX,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,CAACG,IAAI,IAAI,CAACH,IAAI,CAACI,OAAO,EAAE;MAC9BF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACF,IAAI,CAACG,IAAI,EAAED,QAAQ,EAAEF,IAAI,CAACI,OAAO,CAAC,CAAC;EAEvC,oBACEV,OAAA;IAAKa,SAAS,EAAC,EAAE;IAAAC,QAAA,eACfd,OAAA,CAACX,MAAM;MAAAyB,QAAA,eACLd,OAAA,CAACZ,KAAK;QAAC2B,IAAI,EAAC,GAAG;QAACC,OAAO,EAAEV,IAAI,CAACG,IAAI,gBAAGT,OAAA,CAACT,QAAQ;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGpB,OAAA,CAACR,cAAc;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAAClB,EAAA,CA9BQD,GAAG;EAAA,QAEON,WAAW,EACXD,WAAW,EACXJ,WAAW;AAAA;AAAA+B,EAAA,GAJrBpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}