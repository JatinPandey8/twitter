{"ast":null,"code":"import { LOGIN_USER_SUCCESS, LOGIN_USER_REQUEST, GET_USER_PROFILE_REQUEST, GET_USER_PROFILE_SUCCESS, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, LOGIN_USER_FAILURE, REGISTER_USER_FAILURE, GET_USER_PROFILE_FAILURE, LOGOUT, FIND_USER_BY_ID_SUCCESS, FOLLOW_USER_SUCCESS, UPDATE_USER_SUCCESS } from \"./ActionType\";\nconst initialState = {\n  user: null,\n  error: null,\n  jwt: null,\n  loading: false\n};\nexport const loginUser = loginData => async dispatch => {\n  dispatch({\n    type: LOGIN_USER_REQUEST\n  });\n  try {\n    const res = await axios.post(\"/api/auth/login\", loginData);\n\n    // ðŸ‘‡ Log the full response data here\n    console.log(\"Login response:\", res.data);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: {\n        jwt: res.data.jwt,\n        user: res.data.user // Make sure this exists in res.data\n      }\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: LOGIN_USER_FAILURE,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message\n    });\n  }\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER_REQUEST:\n    case REGISTER_USER_REQUEST:\n    case GET_USER_PROFILE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case LOGIN_USER_SUCCESS:\n    case REGISTER_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        jwt: action.payload.jwt,\n        user: action.payload.user\n      };\n    case GET_USER_PROFILE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        user: action.payload\n      };\n    //  case UPDATE_USER_SUCCESS:\n    //     return { ...state, loading: false, error: null, user: action.payload, updateUser:true }\n    case FIND_USER_BY_ID_SUCCESS:\n    case UPDATE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        findUser: action.payload\n      };\n    case FOLLOW_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        findUser: action.payload\n      };\n    case LOGOUT:\n      return initialState;\n    case LOGIN_USER_FAILURE:\n    case REGISTER_USER_FAILURE:\n    case GET_USER_PROFILE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_USER_SUCCESS","LOGIN_USER_REQUEST","GET_USER_PROFILE_REQUEST","GET_USER_PROFILE_SUCCESS","REGISTER_USER_SUCCESS","REGISTER_USER_REQUEST","LOGIN_USER_FAILURE","REGISTER_USER_FAILURE","GET_USER_PROFILE_FAILURE","LOGOUT","FIND_USER_BY_ID_SUCCESS","FOLLOW_USER_SUCCESS","UPDATE_USER_SUCCESS","initialState","user","error","jwt","loading","loginUser","loginData","dispatch","type","res","axios","post","console","log","data","payload","_error$response","_error$response$data","response","message","authReducer","state","action","findUser"],"sources":["C:/Users/Admin/vs/twitter/src/Store/Auth/Reducer.js"],"sourcesContent":["import { LOGIN_USER_SUCCESS, LOGIN_USER_REQUEST, GET_USER_PROFILE_REQUEST, GET_USER_PROFILE_SUCCESS, REGISTER_USER_SUCCESS, REGISTER_USER_REQUEST, LOGIN_USER_FAILURE, REGISTER_USER_FAILURE, GET_USER_PROFILE_FAILURE, LOGOUT, FIND_USER_BY_ID_SUCCESS, FOLLOW_USER_SUCCESS, UPDATE_USER_SUCCESS } from \"./ActionType\"\r\n\r\nconst initialState = {\r\n    user: null,\r\n    error: null,\r\n    jwt: null,\r\n    loading: false,\r\n}\r\n\r\nexport const loginUser = (loginData) => async (dispatch) => {\r\n  dispatch({ type: LOGIN_USER_REQUEST });\r\n  try {\r\n    const res = await axios.post(\"/api/auth/login\", loginData);\r\n    \r\n    // ðŸ‘‡ Log the full response data here\r\n    console.log(\"Login response:\", res.data);\r\n\r\n    dispatch({\r\n      type: LOGIN_USER_SUCCESS,\r\n      payload: {\r\n        jwt: res.data.jwt,\r\n        user: res.data.user, // Make sure this exists in res.data\r\n      }\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: LOGIN_USER_FAILURE,\r\n      payload: error.response?.data?.message || error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case GET_USER_PROFILE_REQUEST:\r\n            return { ...state, loading: true, error: null }\r\n\r\n        case LOGIN_USER_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, loading: false, error: null, jwt: action.payload.jwt,  user: action.payload.user, }\r\n        case GET_USER_PROFILE_SUCCESS:\r\n            return { ...state, loading: false, error: null, user: action.payload }\r\n        //  case UPDATE_USER_SUCCESS:\r\n        //     return { ...state, loading: false, error: null, user: action.payload, updateUser:true }\r\n        case FIND_USER_BY_ID_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return { ...state, loading: false, error: null, findUser: action.payload }\r\n        case FOLLOW_USER_SUCCESS:\r\n            return { ...state, loading: false, error: null, findUser: action.payload }\r\n        case LOGOUT:\r\n            return initialState\r\n        case LOGIN_USER_FAILURE:\r\n        case REGISTER_USER_FAILURE:\r\n        case GET_USER_PROFILE_FAILURE:\r\n            return { ...state, loading: false, error:   action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}