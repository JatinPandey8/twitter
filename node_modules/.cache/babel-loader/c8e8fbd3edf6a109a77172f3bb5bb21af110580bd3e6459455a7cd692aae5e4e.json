{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from \"../../config/api\";\nimport { GET_USER_PROFILE_SUCCESS, GET_USER_PROFILE_FAILURE, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./ActionType\";\nexport const loginUser = loginData => async dispatch => {\n  try {\n    const {\n      data\n    } = await axois.post(`${API_BASE_URL}/auth/signin`, loginData);\n    console.log(\"logged in user\", data);\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n    }\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: data.jwt\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n    dispatch({\n      type: LOGIN_USER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const registerUser = registerData => async dispatch => {\n  try {\n    const {\n      data\n    } = await axois.post(`${API_BASE_URL}/auth/signup`, registerData);\n    console.log(\"logged in user\", data);\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n    }\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.jwt\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n    dispatch({\n      type: REGISTER_USER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getUserProfile = jwt => async dispatch => {\n  try {\n    const {\n      data\n    } = await axois.get(`${API_BASE_URL}/api/users/profile`, {\n      headers: {\n        \"Authorization\": `Bearer ${jwt}`\n      }\n    });\n    dispatch({\n      type: GET_USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"error\", error);\n    dispatch({\n      type: GET_USER_PROFILE_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAILURE","LOGIN_USER_FAILURE","LOGIN_USER_SUCCESS","REGISTER_USER_FAILURE","REGISTER_USER_SUCCESS","loginUser","loginData","dispatch","data","axois","post","console","log","jwt","localStorage","setItem","type","payload","error","message","registerUser","registerData","getUserProfile","get","headers"],"sources":["C:/Users/Admin/vs/twitter/src/Store/Auth/Action.js"],"sourcesContent":["import axios from 'axios';\r\nimport { API_BASE_URL } from \"../../config/api\"\r\nimport { GET_USER_PROFILE_SUCCESS, GET_USER_PROFILE_FAILURE, LOGIN_USER_FAILURE, LOGIN_USER_SUCCESS, REGISTER_USER_FAILURE, REGISTER_USER_SUCCESS } from \"./ActionType\"\r\n\r\nexport const loginUser = (loginData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axois.post(`${API_BASE_URL}/auth/signin`, loginData)\r\n        console.log(\"logged in user\", data)\r\n        if (data.jwt) {\r\n            localStorage.setItem(\"jwt\", data.jwt)\r\n        }\r\n        dispatch({ type: LOGIN_USER_SUCCESS, payload: data.jwt })\r\n    } catch (error) {\r\n        console.log(\"error\", error)\r\n        dispatch({ type: LOGIN_USER_FAILURE, payload: error.message })\r\n    }\r\n}\r\nexport const registerUser = (registerData) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axois.post(`${API_BASE_URL}/auth/signup`, registerData)\r\n        console.log(\"logged in user\", data)\r\n        if (data.jwt) {\r\n            localStorage.setItem(\"jwt\", data.jwt)\r\n        }\r\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: data.jwt })\r\n    } catch (error) {\r\n        console.log(\"error\", error)\r\n        dispatch({ type: REGISTER_USER_FAILURE, payload: error.message })\r\n    }\r\n}\r\nexport const getUserProfile = (jwt) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axois.get(`${API_BASE_URL}/api/users/profile`, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${jwt}`\r\n            }\r\n        })\r\n\r\n        dispatch({ type: GET_USER_PROFILE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        console.log(\"error\", error)\r\n        dispatch({ type: GET_USER_PROFILE_FAILURE, payload: error.message })\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,wBAAwB,EAAEC,wBAAwB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,cAAc;AAEvK,OAAO,MAAMC,SAAS,GAAIC,SAAS,IAAK,MAAOC,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,GAAGZ,YAAY,cAAc,EAAEQ,SAAS,CAAC;IAC3EK,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;IACnC,IAAIA,IAAI,CAACK,GAAG,EAAE;MACVC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEP,IAAI,CAACK,GAAG,CAAC;IACzC;IACAN,QAAQ,CAAC;MAAES,IAAI,EAAEd,kBAAkB;MAAEe,OAAO,EAAET,IAAI,CAACK;IAAI,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC3BX,QAAQ,CAAC;MAAES,IAAI,EAAEf,kBAAkB;MAAEgB,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EAClE;AACJ,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,YAAY,IAAK,MAAOd,QAAQ,IAAK;EAC9D,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,GAAGZ,YAAY,cAAc,EAAEuB,YAAY,CAAC;IAC9EV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;IACnC,IAAIA,IAAI,CAACK,GAAG,EAAE;MACVC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEP,IAAI,CAACK,GAAG,CAAC;IACzC;IACAN,QAAQ,CAAC;MAAES,IAAI,EAAEZ,qBAAqB;MAAEa,OAAO,EAAET,IAAI,CAACK;IAAI,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC3BX,QAAQ,CAAC;MAAES,IAAI,EAAEb,qBAAqB;MAAEc,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACrE;AACJ,CAAC;AACD,OAAO,MAAMG,cAAc,GAAIT,GAAG,IAAK,MAAON,QAAQ,IAAK;EACvD,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMC,KAAK,CAACc,GAAG,CAAC,GAAGzB,YAAY,oBAAoB,EAAE;MAClE0B,OAAO,EAAE;QACL,eAAe,EAAE,UAAUX,GAAG;MAClC;IACJ,CAAC,CAAC;IAEFN,QAAQ,CAAC;MAAES,IAAI,EAAEjB,wBAAwB;MAAEkB,OAAO,EAAET;IAAK,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOU,KAAK,EAAE;IACZP,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEM,KAAK,CAAC;IAC3BX,QAAQ,CAAC;MAAES,IAAI,EAAEhB,wBAAwB;MAAEiB,OAAO,EAAEC,KAAK,CAACC;IAAQ,CAAC,CAAC;EACxE;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}