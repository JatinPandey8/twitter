{"ast":null,"code":"import { Cloudinary } from '@cloudinary/url-gen';\nexport const uploadToCloud = async pics => {\n  if (pics) {\n    const data = new FormData();\n    data.append(\"file\", pics);\n    data.append(\"upload_preset\", \"twitter\");\n    data.append(\"cloud_name\", \"dium4khmy\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/dium4khmy/image/upload\", {\n      method: \"post\",\n      body: data\n    });\n    const fileData = await res.json();\n    return fileData.url.toString();\n  } else console.log(\"error from upload funcytion\");\n};","map":{"version":3,"names":["Cloudinary","uploadToCloud","pics","data","FormData","append","res","fetch","method","body","fileData","json","url","toString","console","log"],"sources":["C:/Users/Admin/vs/twitter/src/Utils/uploadToCloud.js"],"sourcesContent":["\r\nimport { Cloudinary } from '@cloudinary/url-gen';\r\n\r\nexport const uploadToCloud = async (pics) => {\r\n    if (pics) {\r\n        const data = new FormData();\r\n        data.append(\"file\", pics)\r\n        data.append(\"upload_preset\", \"twitter\");\r\n        data.append(\"cloud_name\", \"dium4khmy\")\r\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/dium4khmy/image/upload\", {\r\n            method: \"post\",\r\n            body: data\r\n        })\r\nconst fileData=await res.json();\r\nreturn fileData.url.toString();\r\n\r\n        }\r\n        else console.log(\"error from upload funcytion\")\r\n    }\r\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,qBAAqB;AAEhD,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAIA,IAAI,EAAE;IACN,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC3BD,IAAI,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IACzBC,IAAI,CAACE,MAAM,CAAC,eAAe,EAAE,SAAS,CAAC;IACvCF,IAAI,CAACE,MAAM,CAAC,YAAY,EAAE,WAAW,CAAC;IACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;MAC9EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC;IACV,MAAMO,QAAQ,GAAC,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;IAC/B,OAAOD,QAAQ,CAACE,GAAG,CAACC,QAAQ,CAAC,CAAC;EAEtB,CAAC,MACIC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AACnD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}