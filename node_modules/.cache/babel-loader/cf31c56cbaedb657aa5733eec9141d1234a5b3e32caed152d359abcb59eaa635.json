{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\vs\\\\twitter\\\\src\\\\components\\\\Authentication\\\\SigninForm.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Grid, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { blue } from '@mui/material/colors';\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../../Store/Auth/Action';\n\n// use of  formik and yup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n  password: Yup.string().required(\"Password is required\")\n});\nconst SigninForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema,\n    onSubmit: async values => {\n      const result = await dispatch(loginUser(values));\n      if (result.success) {\n        navigate(\"/\");\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          name: \"email\",\n          variant: \"outlined\",\n          size: \"large\",\n          autoComplete: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.email && Boolean(formik.errors.email),\n          helperText: formik.touched.email && formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Password\"\n          //type=\"password\"\n          ,\n          name: \"password\",\n          variant: \"outlined\",\n          size: \"large\",\n          autoComplete: \"current-password\",\n          value: formik.values.password,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          error: formik.touched.password && Boolean(formik.errors.password),\n          helperText: formik.touched.password && formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        className: \"mt-20\",\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          sx: {\n            borderRadius: \"29px\",\n            py: \"15px\",\n            bgcolor: blue[500],\n            '&:hover': {\n              bgcolor: blue[700]\n            }\n          },\n          type: \"submit\",\n          variant: \"contained\",\n          size: \"large\",\n          disabled: formik.isSubmitting,\n          children: \"Signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SigninForm, \"OTMjEsJ3sKLRkv1gzZ0k9V+NYrU=\", false, function () {\n  return [useDispatch, useNavigate, useFormik];\n});\n_c = SigninForm;\nexport default SigninForm;\nvar _c;\n$RefreshReg$(_c, \"SigninForm\");","map":{"version":3,"names":["Button","Grid","TextField","useFormik","blue","React","Yup","useDispatch","useNavigate","loginUser","jsxDEV","_jsxDEV","validationSchema","object","shape","email","string","required","password","SigninForm","_s","dispatch","navigate","formik","initialValues","onSubmit","values","result","success","handleSubmit","children","container","spacing","item","xs","fullWidth","label","name","variant","size","autoComplete","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","fileName","_jsxFileName","lineNumber","columnNumber","className","sx","borderRadius","py","bgcolor","type","disabled","isSubmitting","_c","$RefreshReg$"],"sources":["C:/Users/Admin/vs/twitter/src/components/Authentication/SigninForm.jsx"],"sourcesContent":["import { Button, Grid, TextField } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { blue } from '@mui/material/colors';\r\nimport React from 'react';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginUser } from '../../Store/Auth/Action';\r\n\r\n// use of  formik and yup\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\r\n    password: Yup.string().required(\"Password is required\")\r\n});\r\n\r\n\r\nconst SigninForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();  \r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n  const result = await dispatch(loginUser(values));\r\n  if (result.success) {\r\n    navigate(\"/\");  \r\n  }\r\n}}\r\n);\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        size=\"large\"\r\n                        autoComplete=\"email\"\r\n                        value={formik.values.email}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Password\"\r\n                        //type=\"password\"\r\n                        name=\"password\"\r\n                        variant=\"outlined\"\r\n                        size=\"large\"\r\n                        autoComplete=\"current-password\"\r\n                        value={formik.values.password}\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                        helperText={formik.touched.password && formik.errors.password}\r\n                    />\r\n                </Grid>\r\n                <Grid className=\"mt-20\" item xs={12}>\r\n                    <Button\r\n                        fullWidth\r\n                        sx={{\r\n                            borderRadius: \"29px\",\r\n                            py: \"15px\",\r\n                            bgcolor: blue[500],\r\n                            '&:hover': {\r\n                                bgcolor: blue[700]\r\n                            }\r\n                        }}\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        size=\"large\"\r\n                        disabled={formik.isSubmitting}\r\n                    >Signin</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    );\r\n}\r\nexport default SigninForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}