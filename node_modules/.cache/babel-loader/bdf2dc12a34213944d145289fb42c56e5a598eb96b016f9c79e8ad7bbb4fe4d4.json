{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\vs\\\\twitter\\\\src\\\\components\\\\ReplyModal\\\\ReplyModal.jsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import  { useEffect, useState } from 'react';\n\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\n// import Modal from '@mui/material/Modal';\n// import { Avatar } from '@mui/material';\n// import { useFormik } from 'formik';\n\n// import { useNavigate } from 'react-router-dom';\n// import ImageIcon from '@mui/icons-material/Image';\n// import FmdGoodIcon from '@mui/icons-material/FmdGood';\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\n// import { useDispatch } from 'react-redux';\n// import { fetchTweetReplies } from '../../Store/Tweet/Action';\n// import { createTweet, createTweetReply } from '../../Store/Tweet/Action';\n\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 600,\n//     bgcolor: 'background.paper',\n//     border: 'none',\n//     outline: 'none',\n//     boxShadow: 24,\n//     p: 4,\n//     borderRadius: 4\n// };\n\n// export default function ReplyModal({open, handleClose, item }) {\n//     const [uploadingImage, setUploadingImage] = React.useState(false);\n//     const [selectImage, setSelectedImage] = React.useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n// const [replies, setReplies] = useState([]);\n//     const handleSubmit = (replyData) => {\n//         createTweetReply(replyData.tweetId, replyData); \n\n//         //dispatch(createTweetReply(values))\n//         handleClose()\n\n//         console.log(\"values\", replyData)   \n//     }\n//     const handleSelectImage = (event) => {\n//         setUploadingImage(true);\n//         const imgUrl = event.target.files[0]\n//         formik.setFieldValue(\"image\", imgUrl);\n//         setSelectedImage(imgUrl);\n//         setUploadingImage(false);\n//     }\n//     const formik = useFormik({\n//         initialValues: {\n//             content: \"\",\n//             image: \"\",\n//             tweetId: item?.id //pass tweet through homesection item then given same model to replymodel\n//         },\n//         onSubmit: handleSubmit\n//     }) \n\n// useEffect(() => {\n//   const loadReplies = async () => {\n//     if (open && item?.id) {\n//       const data = await dispatch(fetchTweetReplies(item.id));\n//       setReplies(data);\n//     }\n\n//   };\n//   loadReplies();\n// }, [open, item?.id]);\n\n//     return (\n//         <div>\n//             <Modal\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"modal-modal-title\"\n//                 aria-describedby=\"modal-modal-description\"\n//             >\n//                 <Box sx={style}>\n//                     <div className=\"flex space-x-5\">\n//                         <Avatar className='cursor-pointer' onClick={() => navigate(`/profile/${6}`)}\n//                             img=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" alt=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" />\n//                         <div className=\"w-full\">\n//                             <div className=\"flex justify-between items-center\">\n//                                 <div className=\"flex cursor-pointer space-x-2 \\\">\n//                                     <span className='font-semibold'>Username name</span>\n//                                     <span className='text-gray-600'>Username .2m</span>\n//                                     <img className='ml-2 w-5 h-5' src=\"blue tick\" />\n//                                 </div>\n\n//                             </div>\n//                             <div className=\"mt-2\">\n//                                 <div onClick={() => navigate('tweet/${}')} className=\"cursor-pointer\" >\n//                                   {replies.map(reply => (\n//   <div key={reply.id} className=\"mt-4 border-t pt-2\">\n//     <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n//       <span>User ID:</span>\n//       <span className=\"font-semibold text-black\">{reply.user?.id}</span>\n//     </div>\n//     <p>{reply.content}</p>\n//   </div>\n// ))}\n\n//                                 </div>\n\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <section className={'py-10'}>\n//                         <div className='flex space-x-5'>\n//                             <Avatar alt=\"username\" src=\" \" />\n//                             <div className=\"w-full\">\n//                                 <form onSubmit={formik.handleSubmit}>\n//                                     <div>\n//                                         <input type=\"text\" name='content' placeholder='what is happended'\n//                                             className={'border-none outline-none text-x1 bg-transparent'} {...formik.getFieldProps(\"content\")} />\n//                                         {formik.errors.content && formik.touched.content && (\n//                                             <span className='text-red-500'>{formik.errors.content}</span>\n//                                         )}\n//                                     </div>\n//                                     {/* <div><img src=''></img>\n//                             </div> */}\n\n//                                     <div className=\"flex justify-between items-center mt-5\">\n//                                         <div className=\"flex space-x-5 items-center\">\n//                                             <label className='flex items-center space-x-2 rounded-md cursor-pointer'>\n//                                                 <ImageIcon className='text-[#1d9bf0]' />\n//                                                 <input type=\"file\" name='imageFile' className='hidden' onChange={handleSelectImage} />\n//                                             </label>\n//                                             <FmdGoodIcon className='text-[#1d9bf0]' />\n//                                             <TagFacesIcon className='text-[#1d9bf0]' />\n//                                         </div>\n//                                         <Button sx={{ width: \"100%\", borderRadius: \"20px\", paddingY: \"8px\", paddingX: \"20px\", bgcolor: \"text-[#1d9bf0]\" }}\n//                                             variant=\"contained\" type=\"submit\" >\n//                                             tweet\n//                                         </Button>\n//                                     </div>\n//                                 </form>\n//                             </div>\n//                         </div>\n\n//                     </section>\n//                 </Box>\n//             </Modal>\n//         </div>\n//     );\n// }\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport { Avatar } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport ImageIcon from '@mui/icons-material/Image';\nimport FmdGoodIcon from '@mui/icons-material/FmdGood';\nimport TagFacesIcon from '@mui/icons-material/TagFaces';\nimport { useDispatch } from 'react-redux';\nimport { fetchTweetReplies, createTweetReply } from '../../Store/Tweet/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: 'none',\n  outline: 'none',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4\n};\nexport default function ReplyModal({\n  open,\n  handleClose,\n  item\n}) {\n  _s();\n  var _item$user2, _item$user3;\n  const [setSelectImage, setUploadingImage] = useState(false);\n  const [selectImage, setSelectedImage] = useState('');\n  const [replies, setReplies] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = async replyData => {\n    await dispatch(createTweetReply(replyData.tweetId, replyData));\n    setSelectImage('');\n    formik.resetForm();\n    const data = await dispatch(fetchTweetReplies(item.id));\n    setReplies(data);\n  };\n  const handleSelectImage = event => {\n    setUploadingImage(true);\n    const imgUrl = event.target.files[0];\n    formik.setFieldValue('image', imgUrl);\n    setSelectedImage(imgUrl);\n    setUploadingImage(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      content: '',\n      image: '',\n      tweetId: item === null || item === void 0 ? void 0 : item.id\n    },\n    onSubmit: handleSubmit\n  });\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (open && item !== null && item !== void 0 && item.id) {\n        const data = await dispatch(fetchTweetReplies(item.id));\n        setReplies(data);\n      }\n    };\n    loadReplies();\n  }, [open, item === null || item === void 0 ? void 0 : item.id]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-5\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            className: \"cursor-pointer\",\n            onClick: () => {\n              var _item$user;\n              return navigate(`/profile/${item === null || item === void 0 ? void 0 : (_item$user = item.user) === null || _item$user === void 0 ? void 0 : _item$user.id}`);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-2 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: item === null || item === void 0 ? void 0 : (_item$user2 = item.user) === null || _item$user2 === void 0 ? void 0 : _item$user2.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: [\"@\", item === null || item === void 0 ? void 0 : (_item$user3 = item.user) === null || _item$user3 === void 0 ? void 0 : _item$user3.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item === null || item === void 0 ? void 0 : item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          className: \"flex space-x-5 items-start\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full space-y-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"content\",\n              placeholder: \"Tweet your reply\",\n              className: \"border-none outline-none w-full\",\n              ...formik.getFieldProps('content')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"flex items-center space-x-2 cursor-pointer\",\n                children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n                  className: \"text-[#1d9bf0]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"imageFile\",\n                  className: \"hidden\",\n                  onChange: handleSelectImage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FmdGoodIcon, {\n                className: \"text-[#1d9bf0]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TagFacesIcon, {\n                className: \"text-[#1d9bf0]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), selectImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(selectImage),\n              alt: \"preview\",\n              className: \"w-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4 pt-4 border-t\",\n          children: replies.map(reply => {\n            var _reply$user, _reply$user2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-3 border-b pb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-2 text-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-semibold\",\n                    children: (_reply$user = reply.user) === null || _reply$user === void 0 ? void 0 : _reply$user.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-600\",\n                    children: [\"@\", (_reply$user2 = reply.user) === null || _reply$user2 === void 0 ? void 0 : _reply$user2.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: reply.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, reply.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyModal, \"ynRX0AX9tMPfMBuMiVJ69oaOQqI=\", false, function () {\n  return [useNavigate, useDispatch, useFormik];\n});\n_c = ReplyModal;\nvar _c;\n$RefreshReg$(_c, \"ReplyModal\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Modal","Avatar","useFormik","useNavigate","ImageIcon","FmdGoodIcon","TagFacesIcon","useDispatch","fetchTweetReplies","createTweetReply","jsxDEV","_jsxDEV","style","position","top","left","transform","width","bgcolor","border","outline","boxShadow","p","borderRadius","ReplyModal","open","handleClose","item","_s","_item$user2","_item$user3","setSelectImage","setUploadingImage","selectImage","setSelectedImage","replies","setReplies","navigate","dispatch","handleSubmit","replyData","tweetId","formik","resetForm","data","id","handleSelectImage","event","imgUrl","target","files","setFieldValue","initialValues","content","image","onSubmit","loadReplies","onClose","children","sx","className","onClick","_item$user","user","fileName","_jsxFileName","lineNumber","columnNumber","fullName","username","type","name","placeholder","getFieldProps","onChange","variant","src","URL","createObjectURL","alt","map","reply","_reply$user","_reply$user2","_c","$RefreshReg$"],"sources":["C:/Users/Admin/vs/twitter/src/components/ReplyModal/ReplyModal.jsx"],"sourcesContent":["// import * as React from 'react';\r\n// import  { useEffect, useState } from 'react';\r\n\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Typography from '@mui/material/Typography';\r\n// import Modal from '@mui/material/Modal';\r\n// import { Avatar } from '@mui/material';\r\n// import { useFormik } from 'formik';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\n// import ImageIcon from '@mui/icons-material/Image';\r\n// import FmdGoodIcon from '@mui/icons-material/FmdGood';\r\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\r\n// import { useDispatch } from 'react-redux';\r\n// import { fetchTweetReplies } from '../../Store/Tweet/Action';\r\n// import { createTweet, createTweetReply } from '../../Store/Tweet/Action';\r\n\r\n// const style = {\r\n//     position: 'absolute',\r\n//     top: '50%',\r\n//     left: '50%',\r\n//     transform: 'translate(-50%, -50%)',\r\n//     width: 600,\r\n//     bgcolor: 'background.paper',\r\n//     border: 'none',\r\n//     outline: 'none',\r\n//     boxShadow: 24,\r\n//     p: 4,\r\n//     borderRadius: 4\r\n// };\r\n\r\n// export default function ReplyModal({open, handleClose, item }) {\r\n//     const [uploadingImage, setUploadingImage] = React.useState(false);\r\n//     const [selectImage, setSelectedImage] = React.useState(\"\");\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n// const [replies, setReplies] = useState([]);\r\n//     const handleSubmit = (replyData) => {\r\n//         createTweetReply(replyData.tweetId, replyData); \r\n\r\n//         //dispatch(createTweetReply(values))\r\n//         handleClose()\r\n        \r\n//         console.log(\"values\", replyData)   \r\n//     }\r\n//     const handleSelectImage = (event) => {\r\n//         setUploadingImage(true);\r\n//         const imgUrl = event.target.files[0]\r\n//         formik.setFieldValue(\"image\", imgUrl);\r\n//         setSelectedImage(imgUrl);\r\n//         setUploadingImage(false);\r\n//     }\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             content: \"\",\r\n//             image: \"\",\r\n//             tweetId: item?.id //pass tweet through homesection item then given same model to replymodel\r\n//         },\r\n//         onSubmit: handleSubmit\r\n//     }) \r\n\r\n// useEffect(() => {\r\n//   const loadReplies = async () => {\r\n//     if (open && item?.id) {\r\n//       const data = await dispatch(fetchTweetReplies(item.id));\r\n//       setReplies(data);\r\n//     }\r\n    \r\n//   };\r\n//   loadReplies();\r\n// }, [open, item?.id]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <Modal\r\n//                 open={open}\r\n//                 onClose={handleClose}\r\n//                 aria-labelledby=\"modal-modal-title\"\r\n//                 aria-describedby=\"modal-modal-description\"\r\n//             >\r\n//                 <Box sx={style}>\r\n//                     <div className=\"flex space-x-5\">\r\n//                         <Avatar className='cursor-pointer' onClick={() => navigate(`/profile/${6}`)}\r\n//                             img=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" alt=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" />\r\n//                         <div className=\"w-full\">\r\n//                             <div className=\"flex justify-between items-center\">\r\n//                                 <div className=\"flex cursor-pointer space-x-2 \\\">\r\n//                                     <span className='font-semibold'>Username name</span>\r\n//                                     <span className='text-gray-600'>Username .2m</span>\r\n//                                     <img className='ml-2 w-5 h-5' src=\"blue tick\" />\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                             <div className=\"mt-2\">\r\n//                                 <div onClick={() => navigate('tweet/${}')} className=\"cursor-pointer\" >\r\n//                                   {replies.map(reply => (\r\n//   <div key={reply.id} className=\"mt-4 border-t pt-2\">\r\n//     <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n//       <span>User ID:</span>\r\n//       <span className=\"font-semibold text-black\">{reply.user?.id}</span>\r\n//     </div>\r\n//     <p>{reply.content}</p>\r\n//   </div>\r\n// ))}\r\n\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <section className={'py-10'}>\r\n//                         <div className='flex space-x-5'>\r\n//                             <Avatar alt=\"username\" src=\" \" />\r\n//                             <div className=\"w-full\">\r\n//                                 <form onSubmit={formik.handleSubmit}>\r\n//                                     <div>\r\n//                                         <input type=\"text\" name='content' placeholder='what is happended'\r\n//                                             className={'border-none outline-none text-x1 bg-transparent'} {...formik.getFieldProps(\"content\")} />\r\n//                                         {formik.errors.content && formik.touched.content && (\r\n//                                             <span className='text-red-500'>{formik.errors.content}</span>\r\n//                                         )}\r\n//                                     </div>\r\n//                                     {/* <div><img src=''></img>\r\n//                             </div> */}\r\n\r\n//                                     <div className=\"flex justify-between items-center mt-5\">\r\n//                                         <div className=\"flex space-x-5 items-center\">\r\n//                                             <label className='flex items-center space-x-2 rounded-md cursor-pointer'>\r\n//                                                 <ImageIcon className='text-[#1d9bf0]' />\r\n//                                                 <input type=\"file\" name='imageFile' className='hidden' onChange={handleSelectImage} />\r\n//                                             </label>\r\n//                                             <FmdGoodIcon className='text-[#1d9bf0]' />\r\n//                                             <TagFacesIcon className='text-[#1d9bf0]' />\r\n//                                         </div>\r\n//                                         <Button sx={{ width: \"100%\", borderRadius: \"20px\", paddingY: \"8px\", paddingX: \"20px\", bgcolor: \"text-[#1d9bf0]\" }}\r\n//                                             variant=\"contained\" type=\"submit\" >\r\n//                                             tweet\r\n//                                         </Button>\r\n//                                     </div>\r\n//                                 </form>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </section>\r\n//                 </Box>\r\n//             </Modal>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Avatar } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport FmdGoodIcon from '@mui/icons-material/FmdGood';\r\nimport TagFacesIcon from '@mui/icons-material/TagFaces';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchTweetReplies, createTweetReply } from '../../Store/Tweet/Action';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 600,\r\n  bgcolor: 'background.paper',\r\n  border: 'none',\r\n  outline: 'none',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 4\r\n};\r\n\r\nexport default function ReplyModal({ open, handleClose, item }) {\r\n  const [setSelectImage, setUploadingImage] = useState(false);\r\n  const [selectImage, setSelectedImage] = useState('');\r\n  const [replies, setReplies] = useState([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (replyData) => {\r\n    await dispatch(createTweetReply(replyData.tweetId, replyData));\r\n    setSelectImage('');\r\n    formik.resetForm();\r\n    const data = await dispatch(fetchTweetReplies(item.id));\r\n    setReplies(data);\r\n  };\r\n\r\n  const handleSelectImage = (event) => {\r\n    setUploadingImage(true);\r\n    const imgUrl = event.target.files[0];\r\n    formik.setFieldValue('image', imgUrl);\r\n    setSelectedImage(imgUrl);\r\n    setUploadingImage(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      content: '',\r\n      image: '',\r\n      tweetId: item?.id\r\n    },\r\n    onSubmit: handleSubmit\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadReplies = async () => {\r\n      if (open && item?.id) {\r\n        const data = await dispatch(fetchTweetReplies(item.id));\r\n        setReplies(data);\r\n      }\r\n    };\r\n    loadReplies();\r\n  }, [open, item?.id]);\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <Box sx={style}>\r\n        <div className=\"flex flex-col space-y-6\">\r\n          <div className=\"flex space-x-5\">\r\n            <Avatar className=\"cursor-pointer\" onClick={() => navigate(`/profile/${item?.user?.id}`)} />\r\n            <div className=\"w-full\">\r\n              <div className=\"flex space-x-2 text-sm\">\r\n                <span className=\"font-semibold\">{item?.user?.fullName}</span>\r\n                <span className=\"text-gray-600\">@{item?.user?.username}</span>\r\n              </div>\r\n              <p>{item?.content}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <form onSubmit={formik.handleSubmit} className=\"flex space-x-5 items-start\">\r\n            <Avatar />\r\n            <div className=\"w-full space-y-3\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"content\"\r\n                placeholder=\"Tweet your reply\"\r\n                className=\"border-none outline-none w-full\"\r\n                {...formik.getFieldProps('content')}\r\n              />\r\n              <div className=\"flex justify-between items-center\">\r\n                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                  <ImageIcon className=\"text-[#1d9bf0]\" />\r\n                  <input type=\"file\" name=\"imageFile\" className=\"hidden\" onChange={handleSelectImage} />\r\n                </label>\r\n                <FmdGoodIcon className=\"text-[#1d9bf0]\" />\r\n                <TagFacesIcon className=\"text-[#1d9bf0]\" />\r\n                <Button type=\"submit\" variant=\"contained\">Reply</Button>\r\n              </div>\r\n              {selectImage && <img src={URL.createObjectURL(selectImage)} alt=\"preview\" className=\"w-full\" />}\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"space-y-4 pt-4 border-t\">\r\n            {replies.map((reply) => (\r\n              <div key={reply.id} className=\"flex space-x-3 border-b pb-3\">\r\n                <Avatar />\r\n                <div>\r\n                  <div className=\"flex space-x-2 text-sm\">\r\n                    <span className=\"font-semibold\">{reply.user?.fullName}</span>\r\n                    <span className=\"text-gray-600\">@{reply.user?.username}</span>\r\n                  </div>\r\n                  <p>{reply.content}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}