{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\vs\\\\twitter\\\\src\\\\components\\\\ReplyModal\\\\ReplyModal.jsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\n// import  { useEffect, useState } from 'react';\n\n// import Box from '@mui/material/Box';\n// import Button from '@mui/material/Button';\n// import Typography from '@mui/material/Typography';\n// import Modal from '@mui/material/Modal';\n// import { Avatar } from '@mui/material';\n// import { useFormik } from 'formik';\n\n// import { useNavigate } from 'react-router-dom';\n// import ImageIcon from '@mui/icons-material/Image';\n// import FmdGoodIcon from '@mui/icons-material/FmdGood';\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\n// import { useDispatch } from 'react-redux';\n// import { fetchTweetReplies } from '../../Store/Tweet/Action';\n// import { createTweet, createTweetReply } from '../../Store/Tweet/Action';\n\n// const style = {\n//     position: 'absolute',\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)',\n//     width: 600,\n//     bgcolor: 'background.paper',\n//     border: 'none',\n//     outline: 'none',\n//     boxShadow: 24,\n//     p: 4,\n//     borderRadius: 4\n// };\n\n// export default function ReplyModal({open, handleClose, item }) {\n//     const [uploadingImage, setUploadingImage] = React.useState(false);\n//     const [selectImage, setSelectedImage] = React.useState(\"\");\n//     const navigate = useNavigate();\n//     const dispatch = useDispatch();\n// const [replies, setReplies] = useState([]);\n//     const handleSubmit = (replyData) => {\n//         createTweetReply(replyData.tweetId, replyData); \n\n//         //dispatch(createTweetReply(values))\n//         handleClose()\n\n//         console.log(\"values\", replyData)   \n//     }\n//     const handleSelectImage = (event) => {\n//         setUploadingImage(true);\n//         const imgUrl = event.target.files[0]\n//         formik.setFieldValue(\"image\", imgUrl);\n//         setSelectedImage(imgUrl);\n//         setUploadingImage(false);\n//     }\n//     const formik = useFormik({\n//         initialValues: {\n//             content: \"\",\n//             image: \"\",\n//             tweetId: item?.id //pass tweet through homesection item then given same model to replymodel\n//         },\n//         onSubmit: handleSubmit\n//     }) \n\n// useEffect(() => {\n//   const loadReplies = async () => {\n//     if (open && item?.id) {\n//       const data = await dispatch(fetchTweetReplies(item.id));\n//       setReplies(data);\n//     }\n\n//   };\n//   loadReplies();\n// }, [open, item?.id]);\n\n//     return (\n//         <div>\n//             <Modal\n//                 open={open}\n//                 onClose={handleClose}\n//                 aria-labelledby=\"modal-modal-title\"\n//                 aria-describedby=\"modal-modal-description\"\n//             >\n//                 <Box sx={style}>\n//                     <div className=\"flex space-x-5\">\n//                         <Avatar className='cursor-pointer' onClick={() => navigate(`/profile/${6}`)}\n//                             img=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" alt=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" />\n//                         <div className=\"w-full\">\n//                             <div className=\"flex justify-between items-center\">\n//                                 <div className=\"flex cursor-pointer space-x-2 \\\">\n//                                     <span className='font-semibold'>Username name</span>\n//                                     <span className='text-gray-600'>Username .2m</span>\n//                                     <img className='ml-2 w-5 h-5' src=\"blue tick\" />\n//                                 </div>\n\n//                             </div>\n//                             <div className=\"mt-2\">\n//                                 <div onClick={() => navigate('tweet/${}')} className=\"cursor-pointer\" >\n//                                   {replies.map(reply => (\n//   <div key={reply.id} className=\"mt-4 border-t pt-2\">\n//     <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n//       <span>User ID:</span>\n//       <span className=\"font-semibold text-black\">{reply.user?.id}</span>\n//     </div>\n//     <p>{reply.content}</p>\n//   </div>\n// ))}\n\n//                                 </div>\n\n//                             </div>\n//                         </div>\n//                     </div>\n//                     <section className={'py-10'}>\n//                         <div className='flex space-x-5'>\n//                             <Avatar alt=\"username\" src=\" \" />\n//                             <div className=\"w-full\">\n//                                 <form onSubmit={formik.handleSubmit}>\n//                                     <div>\n//                                         <input type=\"text\" name='content' placeholder='what is happended'\n//                                             className={'border-none outline-none text-x1 bg-transparent'} {...formik.getFieldProps(\"content\")} />\n//                                         {formik.errors.content && formik.touched.content && (\n//                                             <span className='text-red-500'>{formik.errors.content}</span>\n//                                         )}\n//                                     </div>\n//                                     {/* <div><img src=''></img>\n//                             </div> */}\n\n//                                     <div className=\"flex justify-between items-center mt-5\">\n//                                         <div className=\"flex space-x-5 items-center\">\n//                                             <label className='flex items-center space-x-2 rounded-md cursor-pointer'>\n//                                                 <ImageIcon className='text-[#1d9bf0]' />\n//                                                 <input type=\"file\" name='imageFile' className='hidden' onChange={handleSelectImage} />\n//                                             </label>\n//                                             <FmdGoodIcon className='text-[#1d9bf0]' />\n//                                             <TagFacesIcon className='text-[#1d9bf0]' />\n//                                         </div>\n//                                         <Button sx={{ width: \"100%\", borderRadius: \"20px\", paddingY: \"8px\", paddingX: \"20px\", bgcolor: \"text-[#1d9bf0]\" }}\n//                                             variant=\"contained\" type=\"submit\" >\n//                                             tweet\n//                                         </Button>\n//                                     </div>\n//                                 </form>\n//                             </div>\n//                         </div>\n\n//                     </section>\n//                 </Box>\n//             </Modal>\n//         </div>\n//     );\n// }\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport { Avatar } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport ImageIcon from '@mui/icons-material/Image';\nimport FmdGoodIcon from '@mui/icons-material/FmdGood';\nimport TagFacesIcon from '@mui/icons-material/TagFaces';\nimport { useDispatch } from 'react-redux';\nimport { fetchTweetReplies, createTweetReply } from '../../Store/Tweet/Action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 600,\n  bgcolor: 'background.paper',\n  border: 'none',\n  outline: 'none',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 4\n};\nexport default function ReplyModal({\n  open,\n  handleClose,\n  item\n}) {\n  _s();\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const [selectImage, setSelectedImage] = useState(\"\");\n  const [replies, setReplies] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleSubmit = async replyData => {\n    await dispatch(createTweetReply(replyData.tweetId, replyData));\n    const refreshedReplies = await dispatch(fetchTweetReplies(replyData.tweetId));\n    setReplies(refreshedReplies);\n    handleClose();\n  };\n  const handleSelectImage = event => {\n    setUploadingImage(true);\n    const imgUrl = event.target.files[0];\n    formik.setFieldValue(\"image\", imgUrl);\n    setSelectedImage(imgUrl);\n    setUploadingImage(false);\n  };\n  const formik = useFormik({\n    initialValues: {\n      content: \"\",\n      image: \"\",\n      tweetId: item === null || item === void 0 ? void 0 : item.id\n    },\n    onSubmit: handleSubmit\n  });\n  useEffect(() => {\n    const loadReplies = async () => {\n      if (open && item !== null && item !== void 0 && item.id) {\n        const data = await dispatch(fetchTweetReplies(item.id));\n        setReplies(data);\n      }\n    };\n    loadReplies();\n  }, [open, item === null || item === void 0 ? void 0 : item.id]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"modal-modal-title\",\n    \"aria-describedby\": \"modal-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-5\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"cursor-pointer\",\n          onClick: () => navigate(`/profile/${6}`),\n          src: \"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex cursor-pointer space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold\",\n                children: \"Username name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"Username .2m\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cursor-pointer\",\n              children: replies.map(reply => {\n                var _reply$user;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mt-4 border-t pt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2 text-sm text-gray-600\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"User ID:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-semibold text-black\",\n                      children: (_reply$user = reply.user) === null || _reply$user === void 0 ? void 0 : _reply$user.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: reply.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 21\n                  }, this)]\n                }, reply.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: 'py-10',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-5\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"username\",\n            src: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: formik.handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"content\",\n                  placeholder: \"what is happening\",\n                  className: 'border-none outline-none text-x1 bg-transparent',\n                  ...formik.getFieldProps(\"content\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex justify-between items-center mt-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex space-x-5 items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"flex items-center space-x-2 rounded-md cursor-pointer\",\n                    children: [/*#__PURE__*/_jsxDEV(ImageIcon, {\n                      className: \"text-[#1d9bf0]\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"file\",\n                      name: \"imageFile\",\n                      className: \"hidden\",\n                      onChange: handleSelectImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FmdGoodIcon, {\n                    className: \"text-[#1d9bf0]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TagFacesIcon, {\n                    className: \"text-[#1d9bf0]\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  sx: {\n                    width: \"100%\",\n                    borderRadius: \"20px\",\n                    paddingY: \"8px\",\n                    paddingX: \"20px\",\n                    bgcolor: \"text-[#1d9bf0]\"\n                  },\n                  variant: \"contained\",\n                  type: \"submit\",\n                  children: \"tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(ReplyModal, \"YKBWbMHsd6m7YlcFXltskOXGMig=\", false, function () {\n  return [useNavigate, useDispatch, useFormik];\n});\n_c = ReplyModal;\nvar _c;\n$RefreshReg$(_c, \"ReplyModal\");","map":{"version":3,"names":["React","useEffect","useState","Box","Button","Modal","Avatar","useFormik","useNavigate","ImageIcon","FmdGoodIcon","TagFacesIcon","useDispatch","fetchTweetReplies","createTweetReply","jsxDEV","_jsxDEV","style","position","top","left","transform","width","bgcolor","border","outline","boxShadow","p","borderRadius","ReplyModal","open","handleClose","item","_s","uploadingImage","setUploadingImage","selectImage","setSelectedImage","replies","setReplies","navigate","dispatch","handleSubmit","replyData","tweetId","refreshedReplies","handleSelectImage","event","imgUrl","target","files","formik","setFieldValue","initialValues","content","image","id","onSubmit","loadReplies","data","onClose","children","sx","className","onClick","src","fileName","_jsxFileName","lineNumber","columnNumber","map","reply","_reply$user","user","alt","type","name","placeholder","getFieldProps","onChange","paddingY","paddingX","variant","_c","$RefreshReg$"],"sources":["C:/Users/Admin/vs/twitter/src/components/ReplyModal/ReplyModal.jsx"],"sourcesContent":["// import * as React from 'react';\r\n// import  { useEffect, useState } from 'react';\r\n\r\n// import Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\n// import Typography from '@mui/material/Typography';\r\n// import Modal from '@mui/material/Modal';\r\n// import { Avatar } from '@mui/material';\r\n// import { useFormik } from 'formik';\r\n\r\n// import { useNavigate } from 'react-router-dom';\r\n// import ImageIcon from '@mui/icons-material/Image';\r\n// import FmdGoodIcon from '@mui/icons-material/FmdGood';\r\n// import TagFacesIcon from '@mui/icons-material/TagFaces';\r\n// import { useDispatch } from 'react-redux';\r\n// import { fetchTweetReplies } from '../../Store/Tweet/Action';\r\n// import { createTweet, createTweetReply } from '../../Store/Tweet/Action';\r\n\r\n// const style = {\r\n//     position: 'absolute',\r\n//     top: '50%',\r\n//     left: '50%',\r\n//     transform: 'translate(-50%, -50%)',\r\n//     width: 600,\r\n//     bgcolor: 'background.paper',\r\n//     border: 'none',\r\n//     outline: 'none',\r\n//     boxShadow: 24,\r\n//     p: 4,\r\n//     borderRadius: 4\r\n// };\r\n\r\n// export default function ReplyModal({open, handleClose, item }) {\r\n//     const [uploadingImage, setUploadingImage] = React.useState(false);\r\n//     const [selectImage, setSelectedImage] = React.useState(\"\");\r\n//     const navigate = useNavigate();\r\n//     const dispatch = useDispatch();\r\n// const [replies, setReplies] = useState([]);\r\n//     const handleSubmit = (replyData) => {\r\n//         createTweetReply(replyData.tweetId, replyData); \r\n\r\n//         //dispatch(createTweetReply(values))\r\n//         handleClose()\r\n        \r\n//         console.log(\"values\", replyData)   \r\n//     }\r\n//     const handleSelectImage = (event) => {\r\n//         setUploadingImage(true);\r\n//         const imgUrl = event.target.files[0]\r\n//         formik.setFieldValue(\"image\", imgUrl);\r\n//         setSelectedImage(imgUrl);\r\n//         setUploadingImage(false);\r\n//     }\r\n//     const formik = useFormik({\r\n//         initialValues: {\r\n//             content: \"\",\r\n//             image: \"\",\r\n//             tweetId: item?.id //pass tweet through homesection item then given same model to replymodel\r\n//         },\r\n//         onSubmit: handleSubmit\r\n//     }) \r\n\r\n// useEffect(() => {\r\n//   const loadReplies = async () => {\r\n//     if (open && item?.id) {\r\n//       const data = await dispatch(fetchTweetReplies(item.id));\r\n//       setReplies(data);\r\n//     }\r\n    \r\n//   };\r\n//   loadReplies();\r\n// }, [open, item?.id]);\r\n\r\n//     return (\r\n//         <div>\r\n//             <Modal\r\n//                 open={open}\r\n//                 onClose={handleClose}\r\n//                 aria-labelledby=\"modal-modal-title\"\r\n//                 aria-describedby=\"modal-modal-description\"\r\n//             >\r\n//                 <Box sx={style}>\r\n//                     <div className=\"flex space-x-5\">\r\n//                         <Avatar className='cursor-pointer' onClick={() => navigate(`/profile/${6}`)}\r\n//                             img=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" alt=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" />\r\n//                         <div className=\"w-full\">\r\n//                             <div className=\"flex justify-between items-center\">\r\n//                                 <div className=\"flex cursor-pointer space-x-2 \\\">\r\n//                                     <span className='font-semibold'>Username name</span>\r\n//                                     <span className='text-gray-600'>Username .2m</span>\r\n//                                     <img className='ml-2 w-5 h-5' src=\"blue tick\" />\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                             <div className=\"mt-2\">\r\n//                                 <div onClick={() => navigate('tweet/${}')} className=\"cursor-pointer\" >\r\n//                                   {replies.map(reply => (\r\n//   <div key={reply.id} className=\"mt-4 border-t pt-2\">\r\n//     <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n//       <span>User ID:</span>\r\n//       <span className=\"font-semibold text-black\">{reply.user?.id}</span>\r\n//     </div>\r\n//     <p>{reply.content}</p>\r\n//   </div>\r\n// ))}\r\n\r\n//                                 </div>\r\n\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     <section className={'py-10'}>\r\n//                         <div className='flex space-x-5'>\r\n//                             <Avatar alt=\"username\" src=\" \" />\r\n//                             <div className=\"w-full\">\r\n//                                 <form onSubmit={formik.handleSubmit}>\r\n//                                     <div>\r\n//                                         <input type=\"text\" name='content' placeholder='what is happended'\r\n//                                             className={'border-none outline-none text-x1 bg-transparent'} {...formik.getFieldProps(\"content\")} />\r\n//                                         {formik.errors.content && formik.touched.content && (\r\n//                                             <span className='text-red-500'>{formik.errors.content}</span>\r\n//                                         )}\r\n//                                     </div>\r\n//                                     {/* <div><img src=''></img>\r\n//                             </div> */}\r\n\r\n//                                     <div className=\"flex justify-between items-center mt-5\">\r\n//                                         <div className=\"flex space-x-5 items-center\">\r\n//                                             <label className='flex items-center space-x-2 rounded-md cursor-pointer'>\r\n//                                                 <ImageIcon className='text-[#1d9bf0]' />\r\n//                                                 <input type=\"file\" name='imageFile' className='hidden' onChange={handleSelectImage} />\r\n//                                             </label>\r\n//                                             <FmdGoodIcon className='text-[#1d9bf0]' />\r\n//                                             <TagFacesIcon className='text-[#1d9bf0]' />\r\n//                                         </div>\r\n//                                         <Button sx={{ width: \"100%\", borderRadius: \"20px\", paddingY: \"8px\", paddingX: \"20px\", bgcolor: \"text-[#1d9bf0]\" }}\r\n//                                             variant=\"contained\" type=\"submit\" >\r\n//                                             tweet\r\n//                                         </Button>\r\n//                                     </div>\r\n//                                 </form>\r\n//                             </div>\r\n//                         </div>\r\n\r\n//                     </section>\r\n//                 </Box>\r\n//             </Modal>\r\n//         </div>\r\n//     );\r\n// }\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Avatar } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport FmdGoodIcon from '@mui/icons-material/FmdGood';\r\nimport TagFacesIcon from '@mui/icons-material/TagFaces';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchTweetReplies, createTweetReply } from '../../Store/Tweet/Action';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 600,\r\n  bgcolor: 'background.paper',\r\n  border: 'none',\r\n  outline: 'none',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 4\r\n};\r\n\r\nexport default function ReplyModal({ open, handleClose, item }) {\r\n  const [uploadingImage, setUploadingImage] = useState(false);\r\n  const [selectImage, setSelectedImage] = useState(\"\");\r\n  const [replies, setReplies] = useState([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (replyData) => {\r\n    await dispatch(createTweetReply(replyData.tweetId, replyData));\r\n    const refreshedReplies = await dispatch(fetchTweetReplies(replyData.tweetId));\r\n    setReplies(refreshedReplies);\r\n    handleClose();\r\n  };\r\n\r\n  const handleSelectImage = (event) => {\r\n    setUploadingImage(true);\r\n    const imgUrl = event.target.files[0];\r\n    formik.setFieldValue(\"image\", imgUrl);\r\n    setSelectedImage(imgUrl);\r\n    setUploadingImage(false);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      content: \"\",\r\n      image: \"\",\r\n      tweetId: item?.id\r\n    },\r\n    onSubmit: handleSubmit\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadReplies = async () => {\r\n      if (open && item?.id) {\r\n        const data = await dispatch(fetchTweetReplies(item.id));\r\n        setReplies(data);\r\n      }\r\n    };\r\n    loadReplies();\r\n  }, [open, item?.id]);\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={style}>\r\n        <div className=\"flex space-x-5\">\r\n          <Avatar className='cursor-pointer' onClick={() => navigate(`/profile/${6}`)} src=\"https://www.vectorstock.com/royalty-free-vectors/profile-logo-vectors\" />\r\n          <div className=\"w-full\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div className=\"flex cursor-pointer space-x-2\">\r\n                <span className='font-semibold'>Username name</span>\r\n                <span className='text-gray-600'>Username .2m</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n              <div className=\"cursor-pointer\">\r\n                {replies.map(reply => (\r\n                  <div key={reply.id} className=\"mt-4 border-t pt-2\">\r\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n                      <span>User ID:</span>\r\n                      <span className=\"font-semibold text-black\">{reply.user?.id}</span>\r\n                    </div>\r\n                    <p>{reply.content}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <section className={'py-10'}>\r\n          <div className='flex space-x-5'>\r\n            <Avatar alt=\"username\" src=\" \" />\r\n            <div className=\"w-full\">\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name='content'\r\n                    placeholder='what is happening'\r\n                    className={'border-none outline-none text-x1 bg-transparent'}\r\n                    {...formik.getFieldProps(\"content\")}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between items-center mt-5\">\r\n                  <div className=\"flex space-x-5 items-center\">\r\n                    <label className='flex items-center space-x-2 rounded-md cursor-pointer'>\r\n                      <ImageIcon className='text-[#1d9bf0]' />\r\n                      <input type=\"file\" name='imageFile' className='hidden' onChange={handleSelectImage} />\r\n                    </label>\r\n                    <FmdGoodIcon className='text-[#1d9bf0]' />\r\n                    <TagFacesIcon className='text-[#1d9bf0]' />\r\n                  </div>\r\n                  <Button\r\n                    sx={{ width: \"100%\", borderRadius: \"20px\", paddingY: \"8px\", paddingX: \"20px\", bgcolor: \"text-[#1d9bf0]\" }}\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                  >\r\n                    tweet\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/E,MAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}