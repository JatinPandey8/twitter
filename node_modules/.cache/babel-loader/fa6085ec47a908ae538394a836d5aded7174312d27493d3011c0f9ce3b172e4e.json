{"ast":null,"code":"import { FIND_TWEET_BY_ID_FAILURE, FIND_TWEET_BY_ID_REQUEST, FIND_TWEET_BY_ID_SUCCESS, GET_ALL_TWEETS_SUCCESS, GET_USERS_TWEET_SUCCESS, LIKE_TWEET_FAILURE, LIKE_TWEET_REQUEST, LIKE_TWEET_SUCCESS, REPLY_TWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, TWEET_CREATE_FAILURE, TWEET_CREATE_REQUEST, TWEET_CREATE_SUCCESS, TWEET_DELETE_FAILURE, TWEET_DELETE_REQUEST, TWEET_DELETE_SUCCESS, USER_LIKE_TWEET_FAILURE, USER_LIKE_TWEET_REQUEST, USER_LIKE_TWEET_SUCCESS } from \"./ActionType\";\nconst initialState = {\n  data: null,\n  error: null,\n  tweet: null,\n  tweets: [],\n  loading: false\n};\nexport const tweetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TWEET_CREATE_REQUEST:\n    case TWEET_DELETE_REQUEST:\n    case USER_LIKE_TWEET_REQUEST:\n    case LIKE_TWEET_REQUEST:\n    case RETWEET_REQUEST:\n    case FIND_TWEET_BY_ID_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case TWEET_CREATE_FAILURE:\n    case TWEET_DELETE_FAILURE:\n    case USER_LIKE_TWEET_FAILURE:\n    case LIKE_TWEET_FAILURE:\n    case RETWEET_FAILURE:\n    case FIND_TWEET_BY_ID_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case TWEET_CREATE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        tweets: [action.payload, ...state.tweets]\n      };\n    case GET_ALL_TWEETS_SUCCESS:\n    case GET_USERS_TWEET_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        tweets: action.payload\n      };\n    case USER_LIKE_TWEET_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        likedtweets: action.payload\n      };\n    case LIKE_TWEET_SUCCESS:\n      {\n        const updatedTweet = action.payload;\n        const updatedTweets = state.tweets.map(tweet => tweet.id === updatedTweet.id ? updatedTweet : tweet);\n        return {\n          ...state,\n          loading: false,\n          error: null,\n          tweets: updatedTweets\n        };\n      }\n    //  case  LIKE_TWEET_SUCCESS:\n    //     return { ...state, loading: false, error: null, like: action.payload };\n    case TWEET_DELETE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        tweets: state.tweets.filter(tweet => tweet.id !== action.payload)\n      };\n    case RETWEET_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        retweets: action.payload\n      };\n    case FIND_TWEET_BY_ID_SUCCESS:\n    // case REPLY_TWEET_SUCCESS:\n    //     return { ...state, loading: false, error: null, tweet: action.payload,};\n\n    case REPLY_TWEET_SUCCESS:\n      {\n        const updatedTweet = action.payload;\n        const updatedTweets = state.tweets.map(tweet => tweet.id === updatedTweet.id ? updatedTweet : tweet);\n        return {\n          ...state,\n          loading: false,\n          error: null,\n          tweets: updatedTweets\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["FIND_TWEET_BY_ID_FAILURE","FIND_TWEET_BY_ID_REQUEST","FIND_TWEET_BY_ID_SUCCESS","GET_ALL_TWEETS_SUCCESS","GET_USERS_TWEET_SUCCESS","LIKE_TWEET_FAILURE","LIKE_TWEET_REQUEST","LIKE_TWEET_SUCCESS","REPLY_TWEET_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","TWEET_CREATE_FAILURE","TWEET_CREATE_REQUEST","TWEET_CREATE_SUCCESS","TWEET_DELETE_FAILURE","TWEET_DELETE_REQUEST","TWEET_DELETE_SUCCESS","USER_LIKE_TWEET_FAILURE","USER_LIKE_TWEET_REQUEST","USER_LIKE_TWEET_SUCCESS","initialState","data","error","tweet","tweets","loading","tweetReducer","state","action","type","payload","likedtweets","updatedTweet","updatedTweets","map","id","filter","retweets"],"sources":["C:/Users/Admin/vs/twitter/src/Store/Tweet/Reducer.js"],"sourcesContent":["import { FIND_TWEET_BY_ID_FAILURE, FIND_TWEET_BY_ID_REQUEST, FIND_TWEET_BY_ID_SUCCESS, GET_ALL_TWEETS_SUCCESS, GET_USERS_TWEET_SUCCESS, LIKE_TWEET_FAILURE, LIKE_TWEET_REQUEST, LIKE_TWEET_SUCCESS, REPLY_TWEET_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, TWEET_CREATE_FAILURE, TWEET_CREATE_REQUEST, TWEET_CREATE_SUCCESS, TWEET_DELETE_FAILURE, TWEET_DELETE_REQUEST, TWEET_DELETE_SUCCESS, USER_LIKE_TWEET_FAILURE, USER_LIKE_TWEET_REQUEST, USER_LIKE_TWEET_SUCCESS } from \"./ActionType\";\r\n\r\nconst initialState = {\r\n    data: null,\r\n    error: null,\r\n    tweet: null,\r\n    tweets:[],\r\n    loading: false,\r\n}\r\n\r\nexport const tweetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TWEET_CREATE_REQUEST:\r\n        case TWEET_DELETE_REQUEST:\r\n        case USER_LIKE_TWEET_REQUEST:\r\n        case LIKE_TWEET_REQUEST:\r\n        case RETWEET_REQUEST:\r\n        case FIND_TWEET_BY_ID_REQUEST:\r\n            return { ...state, loading: true, error: null }\r\n        case TWEET_CREATE_FAILURE:\r\n        case TWEET_DELETE_FAILURE:\r\n        case USER_LIKE_TWEET_FAILURE:\r\n        case LIKE_TWEET_FAILURE:\r\n        case RETWEET_FAILURE:\r\n        case FIND_TWEET_BY_ID_FAILURE:\r\n            return { ...state, loading: false, error:action.payload };\r\n        case TWEET_CREATE_SUCCESS:\r\n            return { ...state, loading: false, error: null, tweets: [action.payload, ...state.tweets] };\r\n        case GET_ALL_TWEETS_SUCCESS:\r\n        case GET_USERS_TWEET_SUCCESS:\r\n            return { ...state, loading: false, error: null, tweets: action.payload };\r\n        case  USER_LIKE_TWEET_SUCCESS:\r\n            return { ...state, loading: false, error: null, likedtweets: action.payload };\r\n            case LIKE_TWEET_SUCCESS: {\r\n    const updatedTweet = action.payload;\r\n    const updatedTweets = state.tweets.map(tweet =>\r\n        tweet.id === updatedTweet.id ? updatedTweet : tweet\r\n    );\r\n    return { ...state, loading: false, error: null, tweets: updatedTweets };\r\n}\r\n        //  case  LIKE_TWEET_SUCCESS:\r\n        //     return { ...state, loading: false, error: null, like: action.payload };\r\n         case TWEET_DELETE_SUCCESS:\r\n            return { ...state, loading: false, error: null, tweets: state.tweets.filter((tweet)=>tweet.id!==action.payload)};\r\n        case RETWEET_SUCCESS:\r\n            return { ...state, loading: false, error: null, retweets: action.payload,};\r\n        case FIND_TWEET_BY_ID_SUCCESS:\r\n        // case REPLY_TWEET_SUCCESS:\r\n        //     return { ...state, loading: false, error: null, tweet: action.payload,};\r\n        \r\ncase REPLY_TWEET_SUCCESS: {\r\n    const updatedTweet = action.payload;\r\n    const updatedTweets = state.tweets.map(tweet =>\r\n        tweet.id === updatedTweet.id ? updatedTweet : tweet\r\n    );\r\n    return { ...state, loading: false, error: null, tweets: updatedTweets };\r\n}\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}