{"ast":null,"code":"import { FIND_TWEET_BY_ID_FAILURE, FIND_TWEET_BY_ID_SUCCESS, GET_ALL_TWEETS_FAILURE, GET_ALL_TWEETS_REQUEST, GET_ALL_TWEETS_SUCCESS, GET_USERS_TWEET_FAILURE, GET_USERS_TWEET_SUCCESS, LIKE_TWEET_FAILURE, LIKE_TWEET_SUCCESS, REPLY_TWEET_FAILURE, REPLY_TWEET_SUCCESS, RETWEET_FAILURE, RETWEET_SUCCESS, TWEET_CREATE_FAILURE, TWEET_CREATE_SUCCESS, TWEET_DELETE_FAILURE, TWEET_DELETE_SUCCESS, USER_LIKE_TWEET_FAILURE, USER_LIKE_TWEET_SUCCESS } from \"./ActionType\";\nexport const getAllTweets = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(\"/api/tweets/\");\n    console.log(\"get all tweets : \", data);\n    dispatch({\n      type: GET_ALL_TWEETS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: GET_ALL_TWEETS_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getUserTweets = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/tweets/user/${userId}`);\n    console.log(\"get user tweets : \", data);\n    dispatch({\n      type: GET_USERS_TWEET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: GET_USERS_TWEET_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const findTweetsByLikeContainUser = userId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/tweets/user/${userId}`);\n    console.log(\"get user tweets : \", data);\n    dispatch({\n      type: USER_LIKE_TWEET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: USER_LIKE_TWEET_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const findTweetsById = tweetId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.get(`/api/tweets/${tweetId}`);\n    console.log(\"get tweet by id : \", data);\n    dispatch({\n      type: FIND_TWEET_BY_ID_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: FIND_TWEET_BY_ID_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createTweet = tweetData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`api/tweets/create`, tweetData);\n    console.log(\"create tweet : \", data);\n    dispatch({\n      type: TWEET_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: TWEET_CREATE_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createReTweet = tweetData => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.put(`api/tweets/${tweetId}/retweet`);\n    console.log(\"retweet : \", data);\n    dispatch({\n      type: RETWEET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: RETWEET_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const likeTweet = tweetId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`api/${tweetId}/like`);\n    console.log(\"like tweet : \", data);\n    dispatch({\n      type: LIKE_TWEET_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: LIKE_TWEET_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const deleteTweet = tweetId => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.post(`api/tweet/${tweetId}`);\n    console.log(\"deleted tweet : \", data);\n    dispatch({\n      type: TWEET_DELETE_SUCCESS,\n      payload: tweetId\n    });\n  } catch (error) {\n    console.log(\"catch error - \", error);\n    dispatch({\n      type: TWEET_DELETE_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["FIND_TWEET_BY_ID_FAILURE","FIND_TWEET_BY_ID_SUCCESS","GET_ALL_TWEETS_FAILURE","GET_ALL_TWEETS_REQUEST","GET_ALL_TWEETS_SUCCESS","GET_USERS_TWEET_FAILURE","GET_USERS_TWEET_SUCCESS","LIKE_TWEET_FAILURE","LIKE_TWEET_SUCCESS","REPLY_TWEET_FAILURE","REPLY_TWEET_SUCCESS","RETWEET_FAILURE","RETWEET_SUCCESS","TWEET_CREATE_FAILURE","TWEET_CREATE_SUCCESS","TWEET_DELETE_FAILURE","TWEET_DELETE_SUCCESS","USER_LIKE_TWEET_FAILURE","USER_LIKE_TWEET_SUCCESS","getAllTweets","dispatch","data","api","get","console","log","type","payload","error","message","getUserTweets","userId","findTweetsByLikeContainUser","findTweetsById","tweetId","createTweet","tweetData","post","createReTweet","put","likeTweet","deleteTweet"],"sources":["C:/Users/Admin/vs/twitter/src/Store/Tweet/Action.js"],"sourcesContent":["import { FIND_TWEET_BY_ID_FAILURE, FIND_TWEET_BY_ID_SUCCESS, GET_ALL_TWEETS_FAILURE, GET_ALL_TWEETS_REQUEST, GET_ALL_TWEETS_SUCCESS, GET_USERS_TWEET_FAILURE, GET_USERS_TWEET_SUCCESS, LIKE_TWEET_FAILURE, LIKE_TWEET_SUCCESS, REPLY_TWEET_FAILURE, REPLY_TWEET_SUCCESS, RETWEET_FAILURE, RETWEET_SUCCESS, TWEET_CREATE_FAILURE, TWEET_CREATE_SUCCESS, TWEET_DELETE_FAILURE, TWEET_DELETE_SUCCESS, USER_LIKE_TWEET_FAILURE, USER_LIKE_TWEET_SUCCESS } from \"./ActionType\";\r\n\r\nexport const getAllTweets = () => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.get(\"/api/tweets/\");\r\n        console.log(\"get all tweets : \", data)\r\n        dispatch({type:GET_ALL_TWEETS_SUCCESS, payload:data})\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:GET_ALL_TWEETS_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const getUserTweets = (userId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.get(`/api/tweets/user/${userId}`);\r\n        console.log(\"get user tweets : \", data)\r\n        dispatch({type:GET_USERS_TWEET_SUCCESS, payload:data})\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:GET_USERS_TWEET_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const findTweetsByLikeContainUser = (userId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.get(`/api/tweets/user/${userId}`);\r\n        console.log(\"get user tweets : \", data)\r\n        dispatch({type:USER_LIKE_TWEET_SUCCESS, payload:data})\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:USER_LIKE_TWEET_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\n\r\nexport const findTweetsById = (tweetId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.get(`/api/tweets/${tweetId}`);\r\n        console.log(\"get tweet by id : \", data)\r\n        dispatch({type:FIND_TWEET_BY_ID_SUCCESS, payload:data})\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:FIND_TWEET_BY_ID_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const createTweet = (tweetData) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.post(`api/tweets/create`,tweetData);\r\n        console.log(\"create tweet : \", data)\r\n        dispatch({type: TWEET_CREATE_SUCCESS, payload:data})\r\n    }\r\n    catch (error) {\r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:TWEET_CREATE_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const createReTweet = (tweetData) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.put(`api/tweets/${tweetId}/retweet`);\r\n        console.log(\"retweet : \", data)\r\n        dispatch({type: RETWEET_SUCCESS, payload:data})\r\n    }\r\n    catch (error) { \r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:RETWEET_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const likeTweet = (tweetId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.post(`api/${tweetId}/like`);\r\n        console.log(\"like tweet : \", data)\r\n        dispatch({type: LIKE_TWEET_SUCCESS, payload:data})\r\n    }\r\n    catch (error) { \r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:LIKE_TWEET_FAILURE, payload:error.message})\r\n    }\r\n}\r\n\r\nexport const deleteTweet = (tweetId) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.post(`api/tweet/${tweetId}`);\r\n        console.log(\"deleted tweet : \", data)\r\n        dispatch({type: TWEET_DELETE_SUCCESS, payload:tweetId})\r\n    }\r\n    catch (error) { \r\n        console.log(\"catch error - \", error)\r\n        dispatch({type:TWEET_DELETE_FAILURE, payload:error.message})\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}